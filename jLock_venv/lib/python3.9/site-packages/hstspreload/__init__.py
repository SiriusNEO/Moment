"""Check if a host is in the Google Chrome HSTS Preload list"""

import functools
import os
import typing

__version__ = "2022.9.1"
__checksum__ = "a9de4d3bd79f49116a05e29e2073cb75439f54da0a319a028c10d74c88fa2052"
__all__ = ["in_hsts_preload"]

# fmt: off
_GTLD_INCLUDE_SUBDOMAINS = {b'android', b'app', b'bank', b'boo', b'channel', b'chrome', b'dad', b'day', b'dev', b'eat', b'esq', b'fly', b'foo', b'gle', b'gmail', b'google', b'hangout', b'hotmail', b'ing', b'insurance', b'meet', b'meme', b'new', b'nexus', b'page', b'phd', b'play', b'prof', b'rsvp', b'search', b'youtube'}  # noqa: E501
_JUMPTABLE = [[(0, 11), (11, 10), (21, 16), (37, 61), (98, 26), (124, 12), None, (136, 19), (155, 22), (177, 7), (184, 20), (204, 18), None, (222, 29), (251, 45), (296, 7), (303, 9), (312, 36), (348, 16), (364, 10), (374, 28), None, (402, 62), (464, 8), (472, 18), (490, 19), (509, 13), (522, 14), (536, 14), None, None, (550, 33), (583, 20), (603, 35), (638, 14), (652, 32), (684, 17), (701, 9), (710, 25), (735, 20), (755, 8), (763, 13), (776, 10), None, (786, 17), (803, 6), (809, 26), (835, 10), (845, 5), (850, 19), (869, 14), (883, 11), (894, 12), (906, 27), None, (933, 24), (957, 11), (968, 7), (975, 29), (1004, 18), (1022, 27), (1049, 46), (1095, 25), (1120, 16), (1136, 18), (1154, 5), (1159, 22), (1181, 18), None, (1199, 36), (1235, 15), (1250, 8), (1258, 11), None, (1269, 5), (1274, 16), (1290, 14), (1304, 18), None, (1322, 20), (1342, 26), (1368, 48), (1416, 19), (1435, 12), (1447, 59), (1506, 14), (1520, 14), (1534, 20), None, (1554, 10), (1564, 13), (1577, 20), (1597, 29), None, (1626, 13), (1639, 19), (1658, 11), (1669, 4), (1673, 22), (1695, 10), (1705, 13), (1718, 14), (1732, 28), (1760, 11), (1771, 21), (1792, 12), (1804, 32), None, (1836, 10), (1846, 14), (1860, 19), (1879, 45), (1924, 15), None, (1939, 11), (1950, 23), (1973, 21), (1994, 26), (2020, 6), (2026, 6), (2032, 7), (2039, 5), (2044, 30), (2074, 23), (2097, 35), (2132, 17), (2149, 15), (2164, 19), (2183, 12), (2195, 70), (2265, 55), (2320, 12), (2332, 23), (2355, 16), (2371, 38), (2409, 6), (2415, 20), (2435, 44), (2479, 6), (2485, 41), (2526, 22), (2548, 23), (2571, 36), (2607, 20), (2627, 8), (2635, 15), (2650, 12), (2662, 19), (2681, 25), (2706, 15), None, (2721, 35), (2756, 21), (2777, 17), (2794, 19), (2813, 26), (2839, 5), (2844, 37), (2881, 39), (2920, 16), (2936, 10), (2946, 17), (2963, 23), (2986, 14), (3000, 17), (3017, 8), (3025, 14), (3039, 7), (3046, 29), (3075, 6), (3081, 18), (3099, 32), (3131, 20), (3151, 17), (3168, 24), (3192, 12), (3204, 40), (3244, 40), (3284, 12), (3296, 48), (3344, 32), (3376, 17), None, (3393, 8), (3401, 25), (3426, 25), (3451, 6), (3457, 23), None, (3480, 36), (3516, 33), (3549, 14), (3563, 16), (3579, 27), None, (3606, 30), (3636, 41), (3677, 50), (3727, 15), (3742, 20), (3762, 25), (3787, 21), (3808, 32), (3840, 24), (3864, 20), (3884, 17), (3901, 60), (3961, 19), (3980, 9), (3989, 12), (4001, 12), (4013, 11), (4024, 10), (4034, 48), (4082, 42), None, (4124, 36), (4160, 28), None, (4188, 8), (4196, 8), (4204, 7), None, (4211, 25), (4236, 17), None, (4253, 21), (4274, 35), (4309, 21), (4330, 10), (4340, 41), (4381, 20), (4401, 31), (4432, 23), (4455, 19), (4474, 12), (4486, 5), (4491, 30), (4521, 29), (4550, 14), (4564, 14), (4578, 47), (4625, 52), None, None, (4677, 51), (4728, 42), None, (4770, 18), None, (4788, 15), (4803, 8), (4811, 21), (4832, 6), (4838, 16), (4854, 17)], [(4871, 9790), (14661, 10155), (24816, 10488), (35304, 9452), (44756, 9616), (54372, 9310), (63682, 10416), (74098, 9393), (83491, 10419), (93910, 9671), (103581, 10635), (114216, 9715), (123931, 10374), (134305, 11279), (145584, 10034), (155618, 10481), (166099, 10923), (177022, 10158), (187180, 10018), (197198, 9279), (206477, 10384), (216861, 9963), (226824, 10182), (237006, 10196), (247202, 10487), (257689, 9944), (267633, 10340), (277973, 10287), (288260, 9495), (297755, 9928), (307683, 10564), (318247, 9931), (328178, 9981), (338159, 9946), (348105, 9328), (357433, 10207), (367640, 10042), (377682, 10855), (388537, 10807), (399344, 10627), (409971, 10996), (420967, 9646), (430613, 9877), (440490, 10060), (450550, 10054), (460604, 10241), (470845, 10007), (480852, 11125), (491977, 10056), (502033, 9160), (511193, 9814), (521007, 10487), (531494, 10449), (541943, 10086), (552029, 10473), (562502, 10040), (572542, 10401), (582943, 10209), (593152, 10222), (603374, 8604), (611978, 9932), (621910, 10059), (631969, 9926), (641895, 10346), (652241, 10344), (662585, 10539), (673124, 9850), (682974, 10599), (693573, 10576), (704149, 10411), (714560, 10038), (724598, 9794), (734392, 9186), (743578, 10474), (754052, 10173), (764225, 10614), (774839, 9357), (784196, 10880), (795076, 9990), (805066, 9714), (814780, 10400), (825180, 9056), (834236, 9794), (844030, 10120), (854150, 9662), (863812, 10313), (874125, 10969), (885094, 9921), (895015, 10327), (905342, 10147), (915489, 11013), (926502, 9375), (935877, 9914), (945791, 9748), (955539, 10063), (965602, 10623), (976225, 10254), (986479, 9835), (996314, 10200), (1006514, 9632), (1016146, 9811), (1025957, 10114), (1036071, 9829), (1045900, 9771), (1055671, 9801), (1065472, 10205), (1075677, 10741), (1086418, 10368), (1096786, 11155), (1107941, 10317), (1118258, 10537), (1128795, 10304), (1139099, 9714), (1148813, 10008), (1158821, 10384), (1169205, 10144), (1179349, 10078), (1189427, 10117), (1199544, 9879), (1209423, 11037), (1220460, 10762), (1231222, 10077), (1241299, 10147), (1251446, 10505), (1261951, 11224), (1273175, 10097), (1283272, 9534), (1292806, 10889), (1303695, 10170), (1313865, 11704), (1325569, 11006), (1336575, 9904), (1346479, 10050), (1356529, 9732), (1366261, 9820), (1376081, 10299), (1386380, 9598), (1395978, 10644), (1406622, 9599), (1416221, 9799), (1426020, 10566), (1436586, 10541), (1447127, 9631), (1456758, 9763), (1466521, 10658), (1477179, 9550), (1486729, 10050), (1496779, 9850), (1506629, 9741), (1516370, 10564), (1526934, 10293), (1537227, 10344), (1547571, 10337), (1557908, 9554), (1567462, 10099), (1577561, 10333), (1587894, 10017), (1597911, 10330), (1608241, 9705), (1617946, 9335), (1627281, 9226), (1636507, 10265), (1646772, 10715), (1657487, 9475), (1666962, 9982), (1676944, 11136), (1688080, 10244), (1698324, 9743), (1708067, 10828), (1718895, 9971), (1728866, 9466), (1738332, 10021), (1748353, 11578), (1759931, 9527), (1769458, 9454), (1778912, 10706), (1789618, 10016), (1799634, 10568), (1810202, 9935), (1820137, 9559), (1829696, 12425), (1842121, 10201), (1852322, 10146), (1862468, 10134), (1872602, 10918), (1883520, 11147), (1894667, 9399), (1904066, 10658), (1914724, 10038), (1924762, 9890), (1934652, 10927), (1945579, 9439), (1955018, 10221), (1965239, 9893), (1975132, 10076), (1985208, 10033), (1995241, 9958), (2005199, 9464), (2014663, 9911), (2024574, 9746), (2034320, 10426), (2044746, 9965), (2054711, 10970), (2065681, 10005), (2075686, 10630), (2086316, 10728), (2097044, 9385), (2106429, 10452), (2116881, 10270), (2127151, 10223), (2137374, 10419), (2147793, 10416), (2158209, 10278), (2168487, 10054), (2178541, 10568), (2189109, 10017), (2199126, 9617), (2208743, 10154), (2218897, 9848), (2228745, 10847), (2239592, 9866), (2249458, 9365), (2258823, 10888), (2269711, 10246), (2279957, 10266), (2290223, 10012), (2300235, 9989), (2310224, 9444), (2319668, 10378), (2330046, 10219), (2340265, 10888), (2351153, 9957), (2361110, 9594), (2370704, 10598), (2381302, 10050), (2391352, 10942), (2402294, 9767), (2412061, 9489), (2421550, 9138), (2430688, 10676), (2441364, 10404), (2451768, 10406), (2462174, 10183), (2472357, 10261), (2482618, 9681), (2492299, 10733), (2503032, 10325), (2513357, 9319), (2522676, 10001), (2532677, 9670), (2542347, 10123), (2552470, 10649), (2563119, 10588), (2573707, 9827), (2583534, 10035), (2593569, 10243)], [(2603812, 1123), (2604935, 918), (2605853, 902), (2606755, 1170), (2607925, 841), (2608766, 1012), (2609778, 816), (2610594, 1198), (2611792, 861), (2612653, 942), (2613595, 698), (2614293, 756), (2615049, 1042), (2616091, 1095), (2617186, 1136), (2618322, 1259), (2619581, 1473), (2621054, 849), (2621903, 1086), (2622989, 1006), (2623995, 1158), (2625153, 996), (2626149, 1201), (2627350, 1007), (2628357, 1047), (2629404, 885), (2630289, 1305), (2631594, 1494), (2633088, 1056), (2634144, 1039), (2635183, 1189), (2636372, 1116), (2637488, 828), (2638316, 983), (2639299, 1196), (2640495, 1018), (2641513, 953), (2642466, 1060), (2643526, 1029), (2644555, 1270), (2645825, 965), (2646790, 1198), (2647988, 951), (2648939, 994), (2649933, 997), (2650930, 761), (2651691, 1161), (2652852, 1239), (2654091, 989), (2655080, 693), (2655773, 1007), (2656780, 980), (2657760, 1079), (2658839, 1229), (2660068, 1570), (2661638, 826), (2662464, 927), (2663391, 904), (2664295, 857), (2665152, 981), (2666133, 1007), (2667140, 1123), (2668263, 1315), (2669578, 1155), (2670733, 898), (2671631, 1053), (2672684, 969), (2673653, 720), (2674373, 896), (2675269, 1118), (2676387, 950), (2677337, 1082), (2678419, 778), (2679197, 977), (2680174, 882), (2681056, 953), (2682009, 879), (2682888, 910), (2683798, 996), (2684794, 719), (2685513, 1079), (2686592, 846), (2687438, 1161), (2688599, 831), (2689430, 1021), (2690451, 809), (2691260, 947), (2692207, 1104), (2693311, 1092), (2694403, 1061), (2695464, 1216), (2696680, 1360), (2698040, 1212), (2699252, 934), (2700186, 1057), (2701243, 704), (2701947, 1155), (2703102, 1044), (2704146, 845), (2704991, 891), (2705882, 1045), (2706927, 1124), (2708051, 1104), (2709155, 753), (2709908, 896), (2710804, 1040), (2711844, 707), (2712551, 711), (2713262, 1209), (2714471, 1305), (2715776, 1016), (2716792, 967), (2717759, 957), (2718716, 1072), (2719788, 1039), (2720827, 999), (2721826, 854), (2722680, 818), (2723498, 886), (2724384, 848), (2725232, 1315), (2726547, 1032), (2727579, 991), (2728570, 731), (2729301, 978), (2730279, 1046), (2731325, 981), (2732306, 1210), (2733516, 923), (2734439, 1262), (2735701, 1041), (2736742, 866), (2737608, 1097), (2738705, 891), (2739596, 1161), (2740757, 1068), (2741825, 972), (2742797, 935), (2743732, 1019), (2744751, 832), (2745583, 921), (2746504, 935), (2747439, 980), (2748419, 760), (2749179, 793), (2749972, 708), (2750680, 921), (2751601, 877), (2752478, 942), (2753420, 850), (2754270, 1002), (2755272, 833), (2756105, 717), (2756822, 1153), (2757975, 1020), (2758995, 910), (2759905, 936), (2760841, 1190), (2762031, 993), (2763024, 859), (2763883, 1250), (2765133, 928), (2766061, 944), (2767005, 1110), (2768115, 1304), (2769419, 875), (2770294, 835), (2771129, 990), (2772119, 954), (2773073, 883), (2773956, 1002), (2774958, 814), (2775772, 1212), (2776984, 998), (2777982, 1078), (2779060, 1148), (2780208, 935), (2781143, 809), (2781952, 975), (2782927, 932), (2783859, 2130), (2785989, 790), (2786779, 1008), (2787787, 924), (2788711, 1251), (2789962, 890), (2790852, 975), (2791827, 872), (2792699, 785), (2793484, 1180), (2794664, 871), (2795535, 809), (2796344, 983), (2797327, 1129), (2798456, 1181), (2799637, 1051), (2800688, 949), (2801637, 848), (2802485, 998), (2803483, 890), (2804373, 1023), (2805396, 882), (2806278, 1041), (2807319, 860), (2808179, 988), (2809167, 806), (2809973, 1028), (2811001, 1242), (2812243, 913), (2813156, 1208), (2814364, 982), (2815346, 998), (2816344, 1187), (2817531, 1332), (2818863, 1035), (2819898, 960), (2820858, 1176), (2822034, 905), (2822939, 810), (2823749, 612), (2824361, 993), (2825354, 1192), (2826546, 797), (2827343, 1316), (2828659, 806), (2829465, 982), (2830447, 1001), (2831448, 1133), (2832581, 1177), (2833758, 970), (2834728, 1121), (2835849, 806), (2836655, 1121), (2837776, 870), (2838646, 759), (2839405, 826), (2840231, 872), (2841103, 530), (2841633, 1014), (2842647, 1220), (2843867, 987), (2844854, 886), (2845740, 840), (2846580, 810), (2847390, 1115), (2848505, 792), (2849297, 802), (2850099, 1124), (2851223, 689), (2851912, 1137), (2853049, 2615), (2855664, 849), (2856513, 909), (2857422, 1152), (2858574, 1163), (2859737, 653)], [(2860390, 48), None, (2860438, 35), (2860473, 42), None, None, None, None, None, None, None, None, None, None, None, None, None, (2860515, 42), None, (2860557, 25), (2860582, 44), (2860626, 22), (2860648, 33), None, None, None, None, (2860681, 26), None, None, None, None, (2860707, 21), (2860728, 25), None, (2860753, 21), (2860774, 26), None, None, None, None, (2860800, 71), (2860871, 21), (2860892, 23), None, None, None, None, (2860915, 48), None, None, None, None, None, (2860963, 31), None, None, None, None, (2860994, 42), None, (2861036, 22), None, (2861058, 21), None, (2861079, 26), (2861105, 56), None, None, (2861161, 77), (2861238, 27), None, None, None, None, (2861265, 21), (2861286, 21), None, None, (2861307, 54), (2861361, 42), None, None, None, (2861403, 25), None, None, (2861428, 21), None, None, None, None, None, (2861449, 24), (2861473, 21), None, None, (2861494, 26), None, (2861520, 18), None, (2861538, 54), None, None, None, None, None, None, (2861592, 26), None, None, None, (2861618, 20), None, None, (2861638, 64), (2861702, 42), (2861744, 17), (2861761, 17), (2861778, 26), None, (2861804, 45), None, None, None, (2861849, 26), (2861875, 20), (2861895, 26), None, (2861921, 42), (2861963, 63), None, None, None, (2862026, 40), (2862066, 48), None, None, None, (2862114, 47), None, None, None, None, None, None, None, (2862161, 42), None, (2862203, 80), None, (2862283, 9), None, (2862292, 21), (2862313, 42), None, None, (2862355, 65), (2862420, 82), (2862502, 21), None, (2862523, 72), None, None, (2862595, 24), (2862619, 21), None, None, None, None, None, (2862640, 42), (2862682, 21), (2862703, 21), None, (2862724, 42), (2862766, 25), None, (2862791, 38), (2862829, 21), (2862850, 56), None, None, (2862906, 21), (2862927, 19), (2862946, 26), (2862972, 24), (2862996, 16), None, (2863012, 21), None, None, (2863033, 38), None, (2863071, 22), (2863093, 21), (2863114, 21), (2863135, 21), None, (2863156, 63), None, (2863219, 21), (2863240, 42), None, (2863282, 17), None, None, None, None, (2863299, 21), (2863320, 21), None, None, (2863341, 21), None, None, (2863362, 21), None, (2863383, 26), None, (2863409, 50), (2863459, 22), None, None, (2863481, 50), (2863531, 26), (2863557, 21), (2863578, 21), (2863599, 19), None, (2863618, 35), (2863653, 26), (2863679, 23), (2863702, 39), (2863741, 42), None, None, None, None, None, None, (2863783, 21), None, None, None, (2863804, 21), None, None, (2863825, 90), None, (2863915, 239), (2864154, 38), None, None, None, None]]  # noqa: E501
_CRC8_TABLE = [
    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15,
    0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,
    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65,
    0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,
    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5,
    0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,
    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85,
    0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,
    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2,
    0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,
    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2,
    0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,
    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32,
    0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,
    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42,
    0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,
    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c,
    0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,
    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec,
    0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,
    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c,
    0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,
    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c,
    0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,
    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b,
    0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,
    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b,
    0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,
    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb,
    0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,
    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb,
    0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3
]
# fmt: on

_IS_LEAF = 0x80
_INCLUDE_SUBDOMAINS = 0x40


try:
    from importlib.resources import open_binary

    def open_pkg_binary(path: str) -> typing.BinaryIO:
        return open_binary("hstspreload", path)


except ImportError:

    def open_pkg_binary(path: str) -> typing.BinaryIO:
        return open(
            os.path.join(os.path.dirname(os.path.abspath(__file__)), path),
            "rb",
        )


@functools.lru_cache(maxsize=1024)
def in_hsts_preload(host: typing.AnyStr) -> bool:
    """Determines if an IDNA-encoded host is on the HSTS preload list"""

    if isinstance(host, str):
        host = host.encode("ascii")
    labels = host.lower().split(b".")

    # Fast-branch for gTLDs that are registered to preload all sub-domains.
    if labels[-1] in _GTLD_INCLUDE_SUBDOMAINS:
        return True

    with open_pkg_binary("hstspreload.bin") as f:
        for layer, label in enumerate(labels[::-1]):
            # None of our layers are greater than 4 deep.
            if layer > 3:
                return False

            # Read the jump table for the layer and label
            jump_info = _JUMPTABLE[layer][_crc8(label)]
            if jump_info is None:
                # No entry: host is not preloaded
                return False

            # Read the set of entries for that layer and label
            f.seek(jump_info[0])
            data = bytearray(jump_info[1])
            f.readinto(data)

            for is_leaf, include_subdomains, ent_label in _iter_entries(data):
                # We found a potential leaf
                if is_leaf:
                    if ent_label == host:
                        return True
                    if include_subdomains and host.endswith(b"." + ent_label):
                        return True

                # Continue traversing as we're not at a leaf.
                elif label == ent_label:
                    break
            else:
                return False
    return False


def _iter_entries(data: bytes) -> typing.Iterable[typing.Tuple[int, int, bytes]]:
    while data:
        flags = data[0]
        size = data[1]
        label = bytes(data[2 : 2 + size])
        yield (flags & _IS_LEAF, flags & _INCLUDE_SUBDOMAINS, label)
        data = data[2 + size :]


def _crc8(value: bytes) -> int:
    # CRC8 reference implementation: https://github.com/niccokunzmann/crc8
    checksum = 0x00
    for byte in value:
        checksum = _CRC8_TABLE[checksum ^ byte]
    return checksum
